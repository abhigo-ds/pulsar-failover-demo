{
	"info": {
		"_postman_id": "60d33d37-b4ce-4822-8d73-797a71e63962",
		"name": "PulsarProvider",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "660451"
	},
	"item": [
		{
			"name": "ClusterConfigProvider",
			"item": [
				{
					"name": "getconfig",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "instance",
								"value": "Producer1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/getconfig",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"getconfig"
							]
						}
					},
					"response": []
				},
				{
					"name": "setconfig",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"cluster-name\": \"clusterB\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/setconfig",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"setconfig"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SmartConfigProvider",
			"item": [
				{
					"name": "Instances",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/instances",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"instances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instance",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/instances/Producer1",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"instances",
								"Producer1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instances",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Producer1\",\n  \"region\": \"US\",\n  \"group\": \"Grp1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/instances",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"instances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instances",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Producer1\",\n  \"region\": \"US\",\n  \"group\": \"Grp1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/instances/Producer1?new-group=Grp2",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"instances",
								"Producer1"
							],
							"query": [
								{
									"key": "new-group",
									"value": "Grp2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Groups",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/groups",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Groups",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Grp1\",\n  \"cluster\": \"ClusterA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/groups",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Groups",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/groups/Grp4?new-cluster=ClusterC",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"groups",
								"Grp4"
							],
							"query": [
								{
									"key": "new-cluster",
									"value": "ClusterC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Groups",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/groups/Grp4",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"groups",
								"Grp4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clusters",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/clusters",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"clusters"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "protocol",
			"value": "http",
			"type": "string"
		}
	]
}